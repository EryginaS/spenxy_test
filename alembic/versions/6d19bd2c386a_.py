"""empty message

Revision ID: 6d19bd2c386a
Revises: 
Create Date: 2023-04-17 21:12:25.846471

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '6d19bd2c386a'
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('activity_accounting',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('date', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('admin', sa.String(), nullable=True),
    sa.Column('user', sa.String(), nullable=False),
    sa.Column('user_email', sa.String(), nullable=True),
    sa.Column('wallet', sa.String(), nullable=False),
    sa.Column('original_id', sa.String(), nullable=True),
    sa.Column('type', sa.Enum('PAYMENT', 'REFUND', name='transactionnameenum'), nullable=False),
    sa.Column('product', sa.Enum('PRODUCT_ONE', 'PRODUCT_TWO', name='productsenum'), nullable=False),
    sa.Column('status', sa.Enum('SUCCESS', 'FAILED', name='operationstatusenum'), nullable=True),
    sa.Column('level', sa.Enum('CREATE', 'UPDATE', 'DELETE', name='transactiontypeenum'), nullable=False),
    sa.Column('method', sa.Enum('CASH', 'CASHLESS', name='paymentmethodenum'), nullable=True),
    sa.Column('direction', sa.Enum('INCOME', 'OUTCOME', name='paymentdirectionenum'), nullable=True),
    sa.Column('amount', sa.Float(), server_default='0', nullable=False),
    sa.Column('billing_amount', sa.Float(), nullable=True),
    sa.Column('currency', sa.String(), server_default='USD', nullable=False),
    sa.Column('billing_currency', sa.String(), nullable=True),
    sa.Column('amount_type', sa.Enum('AMOUNT', 'FEE', 'COMMISSION', 'TAX', 'DISCOUNT', 'BONUS', 'CREDIT', 'DEPOSIT', 'CASHBACK', name='transactionamounttypeenum'), nullable=False),
    sa.Column('description', sa.String(), nullable=False),
    sa.Column('total_balance_debit', sa.Float(), nullable=True),
    sa.Column('total_balance_credit', sa.Float(), nullable=True),
    sa.Column('available_balance_debit', sa.Float(), nullable=True),
    sa.Column('available_balance_credit', sa.Float(), nullable=True),
    sa.Column('reserved_balance_debit', sa.Float(), nullable=True),
    sa.Column('reserved_balance_credit', sa.Float(), nullable=True),
    sa.Column('total_balance', sa.Float(), server_default='0', nullable=False),
    sa.Column('available_balance', sa.Float(), server_default='0', nullable=False),
    sa.Column('reserved_balance', sa.Float(), server_default='0', nullable=False),
    sa.Column('total_deposit', sa.Float(), server_default='0', nullable=False),
    sa.Column('incoming_balance', sa.Float(), server_default='0', nullable=False),
    sa.Column('pending_balance', sa.Float(), server_default='0', nullable=False),
    sa.Column('total_spend', sa.Float(), server_default='0', nullable=False),
    sa.Column('total_fee', sa.Float(), server_default='0', nullable=False),
    sa.Column('return_balance', sa.Float(), server_default='0', nullable=False),
    sa.Column('decline_balance', sa.Float(), server_default='0', nullable=False),
    sa.Column('rolling_balance', sa.Float(), server_default='0', nullable=False),
    sa.Column('card', sa.String(), nullable=True),
    sa.Column('card_memo', sa.String(), nullable=True),
    sa.Column('bank_card_memo', sa.String(), nullable=True),
    sa.Column('card_number', sa.String(), nullable=True),
    sa.Column('card_opening_balance', sa.Float(), nullable=True),
    sa.Column('card_topup_balance', sa.Float(), nullable=True),
    sa.Column('card_available_balance', sa.Float(), nullable=True),
    sa.Column('card_pending_balance', sa.Float(), nullable=True),
    sa.Column('card_incoming_balance', sa.Float(), nullable=True),
    sa.Column('card_withdrawal_balance', sa.Float(), nullable=True),
    sa.Column('card_spend', sa.Float(), nullable=True),
    sa.Column('card_fees', sa.Float(), nullable=True),
    sa.Column('turnover_control', sa.Boolean(), nullable=True),
    sa.Column('balances_control', sa.Boolean(), nullable=False),
    sa.Column('cards_control', sa.Boolean(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_activity_accounting_admin'), 'activity_accounting', ['admin'], unique=False)
    op.create_index(op.f('ix_activity_accounting_card'), 'activity_accounting', ['card'], unique=False)
    op.create_index(op.f('ix_activity_accounting_card_memo'), 'activity_accounting', ['card_memo'], unique=False)
    op.create_index(op.f('ix_activity_accounting_date'), 'activity_accounting', ['date'], unique=False)
    op.create_index(op.f('ix_activity_accounting_id'), 'activity_accounting', ['id'], unique=False)
    op.create_index(op.f('ix_activity_accounting_original_id'), 'activity_accounting', ['original_id'], unique=False)
    op.create_index(op.f('ix_activity_accounting_user'), 'activity_accounting', ['user'], unique=False)
    op.create_index(op.f('ix_activity_accounting_user_email'), 'activity_accounting', ['user_email'], unique=False)
    op.create_index(op.f('ix_activity_accounting_wallet'), 'activity_accounting', ['wallet'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_activity_accounting_wallet'), table_name='activity_accounting')
    op.drop_index(op.f('ix_activity_accounting_user_email'), table_name='activity_accounting')
    op.drop_index(op.f('ix_activity_accounting_user'), table_name='activity_accounting')
    op.drop_index(op.f('ix_activity_accounting_original_id'), table_name='activity_accounting')
    op.drop_index(op.f('ix_activity_accounting_id'), table_name='activity_accounting')
    op.drop_index(op.f('ix_activity_accounting_date'), table_name='activity_accounting')
    op.drop_index(op.f('ix_activity_accounting_card_memo'), table_name='activity_accounting')
    op.drop_index(op.f('ix_activity_accounting_card'), table_name='activity_accounting')
    op.drop_index(op.f('ix_activity_accounting_admin'), table_name='activity_accounting')
    op.drop_table('activity_accounting')
    # ### end Alembic commands ###
